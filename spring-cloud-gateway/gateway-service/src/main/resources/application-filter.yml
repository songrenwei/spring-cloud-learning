server:
  port: 9201
spring:
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      routes:
        - id: retry_route
          uri: lb://gateway-service3
          predicates:
            - Path=/gateway/service3/query/**
          filters:
            - name: Retry
              args:
                retries: 1 #需要进行重试的次数
                statuses: BAD_GATEWAY #返回哪个状态码需要进行重试，返回状态码为5XX进行重试
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false
        - id: requestratelimiter_route
          uri: http://localhost:9203
          predicates:
            - Path=/gateway/service3/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1 #每秒允许处理的请求数量
                redis-rate-limiter.burstCapacity: 2 #每秒最大处理的请求数量
                key-resolver: "#{@userKeyResolver}" #限流策略，对应策略的Bean
        - id: hystrix_route
          uri: http://localhost:9203
          predicates:
            - Method=GET
          filters:
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: forward:/fallback
        - id: add_prefix_route
          uri: http://localhost:9203
          predicates:
            - Method=GET
          filters:
            - PrefixPath=/gateway/service3 #对原有路径进行增加操作的过滤器
        - id: strip_prefix_route
          uri: http://localhost:9203
          predicates:
            - Path=/a/**
          filters:
            - StripPrefix=3 #对指定数量的路径前缀进行去除的过滤器
        - id: add_request_parameter_route
          uri: http://localhost:9203
          predicates:
            - Method=GET
          filters:
            - AddRequestParameter=id, 1 #给请求添加参数的过滤器